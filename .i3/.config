#lVegita i3 config

# set windows key as mod
set $mod Mod4


#========== APPEARANCE  ==========#

# font for window titles. Will also be used by the bar unless a different font
font pango:DejaVu Sans Mono 9

# configure border style <normal|1pixel|pixel xx|none|pixel>
new_window pixel 1
new_float none

# change borders
bindsym $mod+u border none
bindsym $mod+y border pixel 1
bindsym $mod+n border normal

# Color palette used for i3 
# Variables are set based on the documentation:
# https://i3wm.org/dovs/userguide.html#variables
# Changing the value of one of the variables will
# effect all the areas with the same color.
set $i3_background      #2B2C2B
set $i3_text            #F9FAF9
set $i3_separator       #454947
set $i3_color1          #f9faf9
set $i3_color2          #595B5B
set $i3_color3          #353836
set $i3_color4          #16A085
set $i3_color5          #FDF6E3
set $i3_color6          #EEE8D5
set $i3_color7          #E5201D
set $i3_color8          #808380
set $i3_color9          #434745
set $i3_color10         #454948
set $i3_color11         #80FFF9
set $i3_color12         #FDF6E3
set $i3_color13         #CB4B16
set $i3_color14         #268BD2
set $i3_color15         #000000
set $i3_color16         #ffffff
set $i3_color17         #0c0c0c


# Theme colors
# class                 border      backgr.     text        indic.      child_border
client.focused          $i3_color8  $i3_color8  $i3_color11 $i3_color12
client.focused_inactive $i3_color9  $i3_color9  $i3_color4  $i3_color10
client.unfocused        $i3_color9  $i3_color9  $i3_color4  $i3_color10 
client.urgent           $i3_color13 $i3_color12 $i3_color4  $i3_color14
client.placeholder      $i3_color15 $i3_color17 $i3_color16 $i3_color15 $i3_color17

client.background       $i3_background


#========== STARTUP PROGRAMS  ==========#

# launch polybar
exec_always --no-startup-id ~/.config/polybar/launch.sh

# set wallpaper
exec --no-startup-id feh --bg-scale ~/Pictures/Wallpapers/wall.jpg

# sound controls
exec --no-startup-id volumeicon
bindsym $mod+Ctrl+m exec terminal -e 'alsamixer'
#exec --no-startup-id pulseaudio
#exec --no-startup-id pa-applet
#bindsym $mod+Ctrl+m exec pavucontrol

# start polkit
exec --no-startup-id /usr/lib/polkit-gnome/polkit-gnome-authentication-agent-1

# start nm-applet
exec --no-startup-id nm-applet

# start power manager
exec --no-startup-id xfce4-power-manager

# Start i3bar
#bar {
#        status_command i3status
#}


#========== START PROGRAMS ==========#

# start terminal
bindsym $mod+Return exec i3-sensible-terminal

# launch rofi
bindsym $mod+d exec rofi -show run

# launch morc menu
bindsym $mod+m exec --no-startup-id morc_menu

# set programs to specific workspaces
assign [class="Opera"] $ws1
assign [class="Spotify"] $ws5
#assign [class=""] $ws

# set  programs to open in floating mode
for_window [class="Galculator"] floating enable
#for_window [class="Galculator"] floating enable sticky enable border normal


#========== ACTION COMMANDS  ==========#

# reload the configuration file
bindsym $mod+Shift+c reload

# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart

# screenshot
bindsym Print exec --no-startup-id i3-scrot

# lock screen
bindsym $mod+z exec --no-startup-id blurlock

# enable transparency (compton)
bindsym $mod+Ctrl+t exec --no-startup-id compton -b

# disable transparency (compton)
bindsym $mod+t exec --no-startup-id pkill compton

# Set shut down, restart and locking features
bindsym $mod+Shift+e mode "$mode_system"
set $mode_system (l)ock, (e)xit, switch_(u)ser, (s)uspend, (h)ibernate, (r)eboot, (Shift+s)hutdown
mode "$mode_system" {
    bindsym l exec --no-startup-id i3exit lock, mode "default"
    bindsym s exec --no-startup-id i3exit suspend, mode "default"
    bindsym u exec --no-startup-id i3exit switch_user, mode "default"
    bindsym e exec --no-startup-id i3exit logout, mode "default"
    bindsym h exec --no-startup-id i3exit hibernate, mode "default"
    bindsym r exec --no-startup-id i3exit reboot, mode "default"
    bindsym Shift+s exec --no-startup-id i3exit shutdown, mode "default"

    # exit system mode: "Enter" or "Escape"
    bindsym Return mode "default"
    bindsym Escape mode "default"
}

# exit i3 (logs you out of your X session)
#bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -b 'Yes, exit i3' 'i3-msg exit'"


#========== WINDOW COMMANDS ==========#

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# kill focused window
bindsym $mod+Shift+q kill

# disable mouse focus
focus_follows_mouse no

# change focus 
# vim keys
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right
# arrow keys 
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
# vim keys
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right
# arrow keys
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
bindsym $mod+b split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# toggle floating window sticky
bindsym $mod+Shift+s sticky toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
bindsym $mod+c focus child

# move focused window to scratchpad
bindsym $mod+Shift+minus move scratchpad

# show/hide/cycle scratchpad window
bindsym $mod+minus scratchpad show

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode
        # vim keys
        bindsym h resize shrink width  10 px or 10 ppt
        bindsym j resize grow   height 10 px or 10 ppt
        bindsym k resize shrink height 10 px or 10 ppt
        bindsym l resize grow   width  10 px or 10 ppt
        # arrow keys
        bindsym Left  resize shrink width  10 px or 10 ppt
        bindsym Down  resize grow   height 10 px or 10 ppt
        bindsym Up    resize shrink height 10 px or 10 ppt
        bindsym Right resize grow   width  10 px or 10 ppt

        # back to normal: Enter or Escape
        bindsym Return mode "default"
        bindsym Escape mode "default"
}

bindsym $mod+r mode "resize"


#========== WORKSPACES ==========#

# navigate workspaces next/previous
# vim keys
bindsym $mod+Ctrl+k workspace next
bindsym $mod+Ctrl+j workspace prev
# arrow keys
bindsym $mod+Ctrl+Right workspace next
bindsym $mod+Ctrl+Left workspace prev

# navigate workspaces back and forth
bindsym $mod+Tab workspace back_and_forth
 
# set workspace names
set $ws1  "1"
set $ws2  "2"
set $ws3  "3"
set $ws4  "4"
set $ws5  "5"
set $ws6  "6"
set $ws7  "7"
set $ws8  "8"
set $ws9  "9"
set $ws10 "10"

# switch to workspace
bindsym $mod+1 workspace $ws1 
bindsym $mod+2 workspace $ws2 
bindsym $mod+3 workspace $ws3 
bindsym $mod+4 workspace $ws4 
bindsym $mod+5 workspace $ws5 
bindsym $mod+6 workspace $ws6 
bindsym $mod+7 workspace $ws7 
bindsym $mod+8 workspace $ws8 
bindsym $mod+9 workspace $ws9 
bindsym $mod+0 workspace $ws10

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace $ws1 
bindsym $mod+Shift+2 move container to workspace $ws2 
bindsym $mod+Shift+3 move container to workspace $ws3 
bindsym $mod+Shift+4 move container to workspace $ws4 
bindsym $mod+Shift+5 move container to workspace $ws5 
bindsym $mod+Shift+6 move container to workspace $ws6 
bindsym $mod+Shift+7 move container to workspace $ws7 
bindsym $mod+Shift+8 move container to workspace $ws8 
bindsym $mod+Shift+9 move container to workspace $ws9 
bindsym $mod+Shift+0 move container to workspace $ws10

# Move to workspace with focused container
bindsym $mod+Ctrl+1 move container to workspace $ws1; workspace $ws1
bindsym $mod+Ctrl+2 move container to workspace $ws2; workspace $ws2
bindsym $mod+Ctrl+3 move container to workspace $ws3; workspace $ws3
bindsym $mod+Ctrl+4 move container to workspace $ws4; workspace $ws4
bindsym $mod+Ctrl+5 move container to workspace $ws5; workspace $ws5
bindsym $mod+Ctrl+6 move container to workspace $ws6; workspace $ws6
bindsym $mod+Ctrl+7 move container to workspace $ws7; workspace $ws7
bindsym $mod+Ctrl+8 move container to workspace $ws8; workspace $ws8
bindsym $mod+Ctrl+9 move container to workspace $ws9; workspace $ws9
bindsym $mod+Ctrl+10 move container to workspace $ws10; workspace $ws10


#========== I3 GAPS  ==========#

# Set inner/outer gaps
gaps inner 15
gaps outer 3

# smart gaps (gaps used if only more than one container on the workspace)
#smart_gaps on

# smart borders (draw borders around container only if it is not the only container on this workspace) 
# on|no_gaps (on=always activate and no_gaps=only activate if the gap size to the edge of the screen is 0)
smart_borders on

# press $mod+Shift+g to enter the gaps mode
# o/i for modifying outer/inner gaps
# +/-for increment/decrement
# 0 to remove gaps
# shift key will make the changes global for all workspaces
set $mode_gaps Gaps: (o) outer, (i) inner
set $mode_gaps_outer Outer Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_inner Inner Gaps: +|-|0 (local), Shift + +|-|0 (global)

bindsym $mod+Shift+g mode "$mode_gaps"

mode "$mode_gaps" {
        bindsym o      mode "$mode_gaps_outer"
        bindsym i      mode "$mode_gaps_inner"
        bindsym Return mode "default"
        bindsym Escape mode "default"
}

mode "$mode_gaps_inner" {
        bindsym plus  gaps inner current plus 5
        bindsym minus gaps inner current minus 5
        bindsym 0     gaps inner current set 0

        bindsym Shift+plus  gaps inner all plus 5
        bindsym Shift+minus gaps inner all minus 5
        bindsym Shift+0     gaps inner all set 0

        bindsym Return mode "default"
        bindsym Escape mode "default"
}
mode "$mode_gaps_outer" {
        bindsym plus  gaps outer current plus 5
        bindsym minus gaps outer current minus 5
        bindsym 0     gaps outer current set 0

        bindsym Shift+plus  gaps outer all plus 5
        bindsym Shift+minus gaps outer all minus 5
        bindsym Shift+0     gaps outer all set 0

        bindsym Return mode "default"
        bindsym Escape mode "default"
}


#==========   ==========#
